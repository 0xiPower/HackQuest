==================================================================================================
cargo stylus check -e $RPC_URL

stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm size: 64.4 KB
File used for deployment hash: ./Cargo.lock
File used for deployment hash: ./Cargo.toml
File used for deployment hash: ./examples/counter.rs
File used for deployment hash: ./rust-toolchain.toml
File used for deployment hash: ./src/erc20.rs
File used for deployment hash: ./src/lib.rs
File used for deployment hash: ./src/main.rs
project metadata hash computed on deployment: "21dcaf1c62d487a4a4efa7f3c6652e165cdd9d8888d13b4556a2dce7141a8c84"
stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm data fee: 0.000109 ETH (originally 0.000091 ETH with 20% bump)
==================================================================================================
cargo stylus export-abi

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface IErc20  {
    function name() external pure returns (string memory);

    function symbol() external pure returns (string memory);

    function decimals() external pure returns (uint8);

    function totalSupply() external view returns (uint256);

    function balanceOf(address owner) external view returns (uint256);

    function transfer(address to, uint256 value) external returns (bool);

    function transferFrom(address from, address to, uint256 value) external returns (bool);

    function approve(address spender, uint256 value) external returns (bool);

    function allowance(address owner, address spender) external view returns (uint256);

    error InsufficientBalance(address, uint256, uint256);

    error InsufficientAllowance(address, address, uint256, uint256);
}

interface IVault is IErc20  {
    function setAsset(address _asset) external returns (address);

    function deposit(uint256 amount) external payable;

    function withdraw(uint256 amount) external;

    function asset() external view returns (address);

    function totalAssets() external view returns (uint256);
}
==================================================================================================
cargo stylus deploy -e $RPC_URL --private-key $PRIV_KEY_PATH --estimate-gas

stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm size: 64.4 KB
File used for deployment hash: ./Cargo.lock
File used for deployment hash: ./Cargo.toml
File used for deployment hash: ./examples/counter.rs
File used for deployment hash: ./rust-toolchain.toml
File used for deployment hash: ./src/erc20.rs
File used for deployment hash: ./src/lib.rs
File used for deployment hash: ./src/main.rs
project metadata hash computed on deployment: "21dcaf1c62d487a4a4efa7f3c6652e165cdd9d8888d13b4556a2dce7141a8c84"
stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm data fee: 0.000109 ETH (originally 0.000091 ETH with 20% bump)
estimates
deployment tx gas: 4232329
gas price: "0.100000000" gwei
deployment tx total cost: "0.000423232900000000" ETH
==================================================================================================
cargo stylus deploy -e $RPC_URL --private-key $PRIV_KEY_PATH

stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm size: 64.4 KB
File used for deployment hash: ./Cargo.lock
File used for deployment hash: ./Cargo.toml
File used for deployment hash: ./examples/counter.rs
File used for deployment hash: ./rust-toolchain.toml
File used for deployment hash: ./src/erc20.rs
File used for deployment hash: ./src/lib.rs
File used for deployment hash: ./src/main.rs
project metadata hash computed on deployment: "21dcaf1c62d487a4a4efa7f3c6652e165cdd9d8888d13b4556a2dce7141a8c84"
stripped custom section from user wasm to remove any sensitive data
contract size: 19.2 KB
wasm data fee: 0.000109 ETH (originally 0.000091 ETH with 20% bump)
deployed code at address: 0x3af84f6421366923ff492af89fbdea0b8acc8219
deployment tx hash: 0x743692a5349cd2b683ed94f5795193e258107b93b82dbf07d9851be6dc4a9c7f
contract activated and ready onchain with tx hash: 0x17db97356f4346165f53d5dc5859a299d90055beaecbd8d4bf287558693eb57e

NOTE: We recommend running cargo stylus cache bid 3af84f6421366923ff492af89fbdea0b8acc8219 0 to cache your activated contract in ArbOS.
Cached contracts benefit from cheaper calls. To read more about the Stylus contract cache, see
https://docs.arbitrum.io/stylus/concepts/stylus-cache-manager
==================================================================================================
cast send --rpc-url $RPC_URL --private-key $PRIV_KEY_PATH 0x3af84f6421366923ff492af89fbdea0b8acc8219 "setAsset(address _asset)" $STYLUS_CONTRACT_ADDRESS

blockHash            0x1261a89bc56cc877fad0cfe287ffed59e7b392fe5d086a51e51fe40dded386f2
blockNumber          134481338
contractAddress      
cumulativeGasUsed    65309
effectiveGasPrice    100000000
from                 0xB0324F835A6F968C998b6E4B179caBee2e20cC48
gasUsed              65309
logs                 []
logsBloom            0x
root                 
status               1 (success)
transactionHash      0xd98cf935903d58f837b2b57bb9c880639d2ef9b3e78e859882453dafa886c0a9
transactionIndex     1
type                 2
blobGasPrice         
blobGasUsed          
authorizationList    
to                   0x3AF84F6421366923ff492aF89fBdea0b8acC8219
gasUsedForL1         0
l1BlockNumber        7950171
timeboosted          false
==================================================================================================
cast send --rpc-url $RPC_URL --private-key $PRIV_KEY_PATH 0x3af84f6421366923ff492af89fbdea0b8acc8219 "deposit(uint256 amount)" 1000000000000000000

blockHash            0x1020b890175d4c003536c5aaf7c76e7bd8d442c976caf21010c9cec9d1af1ea2
blockNumber          134482462
contractAddress      
cumulativeGasUsed    93551
effectiveGasPrice    100000000
from                 0xB0324F835A6F968C998b6E4B179caBee2e20cC48
gasUsed              93551
logs                 [{"address":"0x3af84f6421366923ff492af89fbdea0b8acc8219","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x000000000000000000000000b0324f835a6f968c998b6e4b179cabee2e20cc48"],"data":"0x0000000000000000000000000000000000000000000000000de0b6b3a7640000","blockHash":"0x1020b890175d4c003536c5aaf7c76e7bd8d442c976caf21010c9cec9d1af1ea2","blockNumber":"0x8040a1e","transactionHash":"0xb6d6463f901da55069e54a4e60810f6f80d86e64aab3b5ea54a15e26a64a5ef3","transactionIndex":"0x1","logIndex":"0x0","removed":false}]
logsBloom            0x
root                 
status               1 (success)
transactionHash      0xb6d6463f901da55069e54a4e60810f6f80d86e64aab3b5ea54a15e26a64a5ef3
transactionIndex     1
type                 2
blobGasPrice         
blobGasUsed          
authorizationList    
to                   0x3AF84F6421366923ff492aF89fBdea0b8acC8219
gasUsedForL1         0
l1BlockNumber        7950195
timeboosted          false